<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd">
	<munit:config name="s-wmos-api-test-suite.xml" />
	<munit:test name="s-wmos-api-test-suite-get:\reporting\inventory\holdings-happy" doc:id="5b6b7503-70e1-46e2-857c-f5c5a7e6bd30" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="fddaffac-28c1-4fe2-8ca3-5914e260a2ab" >
				<munit:attributes value="#[readUrl('classpath://inventory_holdings\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="wsc:consume" doc:id="e76d0a20-2d5f-421e-ad56-742f7ac6d205" processor="wsc:consume">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="BU validation-getUserDetails" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("postauthenticationvalidatebusinessUnit/get-user-details-payload.xml")]&#10;' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when db:select" doc:id="631d4c7b-aa82-413b-b4e5-6e082cde18bc" processor="db:select">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="select Holdings" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#[[  &#10;	{&#10;    "SIZEDESC": "1001",&#10;    "QTYAVAILABLE": 370,&#10;    "TOTALBOH": 550,&#10;    "BUSINESSUNIT": 12,&#10;    "QTYCOMMIT": 0,&#10;    "ITEM_ID": 81,&#10;    "DESCRIPTION": "Item 1001",&#10;    "QTYUNAVAILABLE": 100,&#10;    "QTYALLOCATED": 0,&#10;    "SKU": "1001",&#10;    "FACILITY": "ECP"&#10;  }&#10;]]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\reporting\inventory\holdings:s-wmos-api-config" doc:id="4a5b4c43-68ce-4df4-b702-dcd162e75882" name="get:\reporting\inventory\holdings:s-wmos-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="ecea8ca7-f534-4bad-ac25-57016710a274">
				<munit-tools:that><![CDATA[#[%dw 2.0
import inventory_holdings::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="s-wmos-api-test-suite-get:\reporting\inventory\holdings-error" doc:id="f7ea9677-8a27-435e-be9a-e8770fb0646d" description="Test" expectedErrorType="MTN:DATABASE_ERROR">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="3839713b-264f-490e-aab4-b404db4c3911">
				<munit:attributes value="#[readUrl('classpath://inventory_holdings\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="wsc:consume" doc:id="f0ba3a90-6b11-475d-b412-3401f75174b5" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="BU validation-getUserDetails" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("postauthenticationvalidatebusinessUnit/get-user-details-payload.xml")]&#10;' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when db:select" doc:id="63befb14-27b7-413f-b6c9-be12940ca394" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select Holdings" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[  &#10;	{&#10;    "SIZEDESC": "1001",&#10;    "QTYAVAILABLE": 370,&#10;    "TOTALBOH": 550,&#10;    "BUSINESSUNIT": 12,&#10;    "QTYCOMMIT": 0,&#10;    "ITEM_ID": 81,&#10;    "DESCRIPTION": "Item 1001",&#10;    "QTYUNAVAILABLE": 100,&#10;    "QTYALLOCATED": 0,&#10;    "SKU": "1001",&#10;    "FACILITY": "ECP"&#10;  }&#10;]]' mediaType="application/java" encoding="UTF-8" />
					<munit-tools:error typeId="MTN:DATABASE_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\reporting\inventory\holdings:s-wmos-api-config" doc:id="6812cd47-77c9-4ae9-be47-a2a676c0e81a" name="get:\reporting\inventory\holdings:s-wmos-api-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert expression" doc:id="2e40ca0c-a779-48a6-b42f-4cfbcd65d3b3" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import inventory_holdings::assert_expression_error_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="s-wmos-api-test-suite-get:\reporting\inventory\transactions-error" doc:id="51d0b24c-ff01-4657-85d2-3be120916ee6" description="Test" expectedErrorType="MTN:DATABASE_ERROR">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="4ba172d2-6470-4833-b095-d640bbac22d4" >
				<munit:attributes value="#[readUrl('classpath://inventory_transactions\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Copy_of_wsc:consume" doc:id="affd77ef-e2b0-4410-af0f-5107c11d60c4" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="BU validation-getUserDetails" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("postauthenticationvalidatebusinessUnit/get-user-details-payload.xml")]&#10;' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when db:select" doc:id="f90e8dec-3a39-457b-a662-7223e62af428" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="select Transactions" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "S",&#10;        "ActionCode": "05",&#10;        "LPN": "000000013",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 1,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:39:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 205,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000001",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 54,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 50&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000005",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 57,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000006",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 64,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000010",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 101,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000011",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 104,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000012",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 107,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 50&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000013",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 110,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000003",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 51,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 60&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000009",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 98,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    }&#10;]]' mediaType="text/json" encoding="UTF-8" />
					<munit-tools:error typeId="MTN:DATABASE_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\reporting\inventory\transactions:s-wmos-api-config" doc:id="83f36c55-5ea3-4d3e-815b-1c7b53558e78" name="get:\reporting\inventory\transactions:s-wmos-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="f48d5a96-0d06-47a0-828d-23eddf7e32d7" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import inventory_transactions::assert_expression_error_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="s-wmos-api-test-suite-get:\reporting\inventory\transactions-happy" doc:id="3abea0c1-24a8-4bac-96a5-4be3232069bc" description="Test">
		<munit:behavior>
			<munit:set-event doc:name="Set Event" doc:id="24badb62-f47a-4084-b7f9-fb14f698286d" >
				<munit:attributes value="#[readUrl('classpath://inventory_transactions\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="wsc:consume" doc:id="74d7aea2-9d14-40cc-a495-98ca7537b7ef" processor="wsc:consume">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="BU validation-getUserDetails" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#[MunitTools::getResourceAsString("postauthenticationvalidatebusinessUnit/get-user-details-payload.xml")]&#10;' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when db:select" doc:id="ed157b60-99e3-4740-8b4f-aa3de2826ee1" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="select Transactions" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "S",&#10;        "ActionCode": "05",&#10;        "LPN": "000000013",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 1,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:39:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 205,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000001",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 54,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 50&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000005",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 57,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000006",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 64,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000010",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 101,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000011",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 104,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000012",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 107,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 50&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000013",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 110,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 100&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000003",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 51,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 60&#10;    },&#10;    {&#10;        "TransactionCode": "01",&#10;        "ReasonCode": "null",&#10;        "AdjustmentType": "A",&#10;        "ActionCode": "06",&#10;        "LPN": "000000009",&#10;        "Warehouse": "ECP",&#10;        "SequenceNumber": 2,&#10;        "TransactionType": "300",&#10;        "Processed": "2021-02-25T12:04:00",&#10;        "BU": "100",&#10;        "InventoryType": "null",&#10;        "BatchNumber": "null",&#10;        "TransactionNumber": 98,&#10;        "SKU": "1001",&#10;        "AdjustmentQuantity": 10&#10;    }&#10;]]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to get:\reporting\inventory\transactions:s-wmos-api-config" doc:id="7e2f2fa5-0ec3-4d16-bca3-4447003a7566" name="get:\reporting\inventory\transactions:s-wmos-api-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert expression" doc:id="949db5dd-4d80-4883-8571-5972b213287d">
				<munit-tools:that><![CDATA[#[%dw 2.0
import inventory_transactions::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
